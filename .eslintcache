[{"/root/front/src/reducers/index.js":"1","/root/front/src/reducers/counter.js":"2","/root/front/src/reducers/isLogged.js":"3","/root/front/src/actions/index.js":"4","/root/front/src/reducers/user.js":"5","/root/front/src/index.js":"6","/root/front/src/App.js":"7","/root/front/src/components/About.js":"8","/root/front/src/components/Explore.js":"9","/root/front/src/components/forms/LoginForm.js":"10","/root/front/src/components/forms/RegisterForm.js":"11","/root/front/src/components/NavigationBar.js":"12","/root/front/src/reducers/navigation.js":"13","/root/front/src/components/Auth.js":"14","/root/front/src/reportWebVitals.js":"15","/root/front/src/components/Mine.js":"16","/root/front/src/components/Home.js":"17"},{"size":399,"mtime":1607352743030,"results":"18","hashOfConfig":"19"},{"size":263,"mtime":1607178594390,"results":"20","hashOfConfig":"19"},{"size":188,"mtime":1607177814160,"results":"21","hashOfConfig":"19"},{"size":151,"mtime":1607180753350,"results":"22","hashOfConfig":"19"},{"size":184,"mtime":1607270221120,"results":"23","hashOfConfig":"19"},{"size":504,"mtime":1607452461810,"results":"24","hashOfConfig":"19"},{"size":1157,"mtime":1607457060250,"results":"25","hashOfConfig":"19"},{"size":1056,"mtime":1607313824190,"results":"26","hashOfConfig":"19"},{"size":141,"mtime":1607451725620,"results":"27","hashOfConfig":"19"},{"size":1359,"mtime":1607430031300,"results":"28","hashOfConfig":"19"},{"size":5860,"mtime":1607454877230,"results":"29","hashOfConfig":"19"},{"size":1468,"mtime":1607457017170,"results":"30","hashOfConfig":"19"},{"size":385,"mtime":1607352662890,"results":"31","hashOfConfig":"19"},{"size":553,"mtime":1607450908030,"results":"32","hashOfConfig":"19"},{"size":362,"mtime":1607451459060,"results":"33","hashOfConfig":"19"},{"size":127,"mtime":1607455215800,"results":"34","hashOfConfig":"19"},{"size":127,"mtime":1607455310990,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"dxwgcn",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/root/front/src/reducers/index.js",[],["75","76"],"/root/front/src/reducers/counter.js",[],["77","78"],"/root/front/src/reducers/isLogged.js",[],"/root/front/src/actions/index.js",[],["79","80"],"/root/front/src/reducers/user.js",[],"/root/front/src/index.js",[],["81","82"],"/root/front/src/App.js",[],"/root/front/src/components/About.js",[],"/root/front/src/components/Explore.js",[],"/root/front/src/components/forms/LoginForm.js",[],"/root/front/src/components/forms/RegisterForm.js",["83","84"],"import React, { useState } from \"react\";\n// import { useForm } from \"react-hook-form\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Formik, Field } from \"formik\";\n\n// // import fs from \"fs\";\n// // const fs = require(\"fs\");\n// // let imageFile = fs.readFileSync(\"./test1.png\");\n// import imageFile from \"./test1.png\";\n// console.log(imageFile);\n\n// // const authHeader = req.headers['authorization'];\n// // \tconst token = authHeader && authHeader.split(' ')[1];\n// // \t// Bearer <access token>\n// // log(imageFile);\n// const base = \"https://tsns-api.herokuapp.com/api/\";\n\n// // axios.post(base + \"auth/register\", {\n// //   nickname: \"asd\",\n// //   email: \"jjw2995@gmail.com\",\n// //   password: \"Testing12#\",\n// // });\n// axios\n//   .post(base + \"auth/login\", {\n//     // nickname: \"asd\",\n//     email: \"jjw2995@gmail.com\",\n//     password: \"Testing12#\",\n//   })\n//   // formData.append(\"file\", { uri: \"file://path/to/image.png\", type: \"image/png\" });\n\n//   .then((r) => {\n//     let form = new FormData();\n//     // form.append(\"image\", { uri: imageFile, type: \"image/png\" }, \"image.png\");\n\nfunction RegisterForm() {\n  // const { register, getValues, handleSubmit, errors } = useForm();\n\n  const [msg, setMsg] = useState(\"\");\n  const onSubmit = async (e) => {\n    // console.log(getValues());\n    e.preventDefault();\n\n    const formData = new FormData(e.target),\n      formDataObj = Object.fromEntries(formData.entries());\n    console.log(formDataObj);\n    axios\n      .post(process.env.REACT_APP_API_URL + \"/api/auth/register\", formDataObj)\n      .then((r) => {\n        console.log(r);\n        return <div>asd</div>;\n      })\n      .catch((e) => {\n        // setMsg(e.message);\n        // console.log(e);\n        // console.log(e.message);\n        return <div>asd</div>;\n      });\n    // try {\n    //   let a = await axios.post(\n    //     process.env.REACT_APP_API_URL + \"/api/auth/register\",\n    //     formDataObj\n    //   );\n    //   console.log(a);\n    // } catch (error) {\n    //   console.log(error);\n    //   console.log(error.message);\n    //   console.log(error.status);\n    // }\n    // .catch((e) => {\n    // });\n  };\n\n  const [showPass, setShowPass] = useState(false);\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ nickname: \"\", email: \"\" }}\n        onSubmit={(data) => {\n          console.log(\"submit: \", data);\n        }}\n      >\n        {({ values, handleChange, handleSubmit }) => (\n          <Form onSubmit={handleSubmit} onChange={handleChange}>\n            <form></form>\n            {/* <Form.Group controlId=\"formBasicNickname\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Nickname\"\n                value={values.nickname}\n                name=\"nickname\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" />\n            </Form.Group> */}\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n          </Form>\n        )}\n      </Formik>\n\n      <Form onSubmit={onSubmit}>\n        <p>{msg}</p>\n        <h4>REGISTER</h4>\n\n        <Form.Group controlId=\"formBasicNickname\">\n          <Form.Control type=\"text\" placeholder=\"Nickname\" name=\"nickname\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          {/* <Form.Label>Password</Form.Label> */}\n          <Form.Control\n            type={showPass ? \"text\" : \"password\"}\n            placeholder=\"Password\"\n            name=\"password\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword1\">\n          <Form.Control\n            type={showPass ? \"text\" : \"password\"}\n            placeholder=\"Confirm Password\"\n            name=\"password1\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check\n            type=\"checkbox\"\n            label=\"show password\"\n            onClick={() => setShowPass(!showPass)}\n          />\n        </Form.Group>\n        {/* <div> */}\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n\n        {/* <input\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        ref={register({\n          required: \"email required\",\n          pattern: {\n            value: /\\S+@\\S+\\.\\S+/,\n            message: \"email must be a valid email\",\n          },\n        })}\n      />\n      <input\n        type={showPass ? \"text\" : \"password\"}\n        placeholder=\"Password\"\n        name=\"password\"\n        ref={register({\n          required: \"password required\",\n          pattern: {\n            value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+])(?=.{8,32})/,\n            message:\n              \"password must contain a number, lowercase, UPPERCASE, special, and be 8~32 characters long\",\n          },\n        })}\n      />\n      <input\n        type={showPass ? \"text\" : \"password\"}\n        placeholder=\"Confirm Password\"\n        name=\"confirmPass\"\n        ref={register({\n          validate: {\n            eqlPassword: (value) =>\n              value === getValues().password || \"password does not match\",\n          },\n        })}\n      /> */}\n        {/* <input type=\"submit\" value=\"register\"></input> */}\n        {/* {errors.email && <p>{errors.email.message}</p>}\n        {errors.password && <p>{errors.password.message}</p>}\n        {errors.confirmPass && <p>{errors.confirmPass.message}</p>} */}\n        {/* <button onClick={() => setShowPass(!showPass)}>show/hide password</button> */}\n      </Form>\n    </div>\n  );\n}\n\nexport default RegisterForm;\n","/root/front/src/components/NavigationBar.js",[],"/root/front/src/reducers/navigation.js",[],"/root/front/src/components/Auth.js",[],"/root/front/src/reportWebVitals.js",[],"/root/front/src/components/Mine.js",[],"/root/front/src/components/Home.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"85","replacedBy":"91"},{"ruleId":"87","replacedBy":"92"},{"ruleId":"85","replacedBy":"93"},{"ruleId":"87","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":5,"column":18,"nodeType":"97","messageId":"98","endLine":5,"endColumn":23},{"ruleId":"95","severity":1,"message":"99","line":39,"column":15,"nodeType":"97","messageId":"98","endLine":39,"endColumn":21},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],["100"],["101"],["100"],["101"],"no-unused-vars","'Field' is defined but never used.","Identifier","unusedVar","'setMsg' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]